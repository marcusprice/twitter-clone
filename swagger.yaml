openapi: 3.0.4
info:
  title: Twitter Clone API
  version: 1.0.0

servers:
  - url: /api/v1

paths:
  /timeline:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: maximum number of posts to return
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          description: number of posts to offset by
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: successfully retreived timeline posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasMore:
                    type: boolean
                  posts:
                    type: array
                    items:
                      type: object
                      properties:
                        postID:
                          type: integer
                        content:
                          type: string
                        image:
                          type: string
  /user/create:
    post:
      description: Creates a new user
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/UserInput'
      responses:
        "500":
          description: internal server error
        "400":
          description: bad request
        "409":
          description: username and or email already exists
        "200": 
          description: A JSON object of the newly created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  username:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  displayName:
                    type: string
  /user/authenticate:
    post:
      description: | 
        Attempts to authenticate user based on email (or username) and password
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#/components/schemas/UserInput'
      responses:
        "500":
          description: internal server error
        "401":
          description: unauthorized
        "400":
          description: bad request
        "200": 
          description: A JSON object of the authenticated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  username:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  displayName:
                    type: string
  /user/{username}/follow:
    put:
      security:
        - bearerAuth: []
      description: follows user
      parameters:
        - name: username
          in: path
          required: true
          description: username of user to follow
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "404":
          description: not found
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: user successfully followed
    delete:
      security:
        - bearerAuth: []
      description: unfollows user
      parameters:
        - name: username
          in: path
          required: true
          description: username of user to unfollow
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "404":
          description: not found
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: user successfully unfollowed
  /post/create:
    post:
      security:
        - bearerAuth: []
      description: creates post
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        "500":
          description: internal server error
        "415":
          description: unsupported media type
        "413":
          description: request entity too large
        "401":
          description: unauthorized
        "400":
          description: bad request
        "200":
          description: post successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  postID:
                    type: integer
                  content:
                    type: string
                  likeCount:
                    type: integer
                  retweetCount:
                    type: integer
                  bookmarkCount:
                    type: integer
                  impressions:
                    type: integer
                  image:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  author:
                    type: object
                    properties:
                      username:
                        type: string
                      displayName:
                        type: string
                      avatar:
                        type: string
  /post/{id}/like:
    put:
      security:
        - bearerAuth: []
      description: likes post
      parameters:
        - name: id
          in: path
          required: true
          description: post id to like
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: post successfully liked
    delete:
      security:
        - bearerAuth: []
      description: likes post
      parameters:
        - name: id
          in: path
          required: true
          description: post id to unlike
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: post successfully unliked
  /post/{id}/retweet:
    put:
      security:
        - bearerAuth: []
      description: retweets post
      parameters:
        - name: id
          in: path
          required: true
          description: post id to retweet
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: post successfully retweetd
    delete:
      security:
        - bearerAuth: []
      description: retweets post
      parameters:
        - name: id
          in: path
          required: true
          description: post id to unretweet
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: post successfully unretweeted
  /post/{id}/bookmark:
    put:
      security:
        - bearerAuth: []
      description: bookmarks post
      parameters:
        - name: id
          in: path
          required: true
          description: post id to bookmark
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: post successfully bookmarked
    delete:
      security:
        - bearerAuth: []
      description: bookmarks post
      parameters:
        - name: id
          in: path
          required: true
          description: post id to unbookmark
          schema:
            type: string
      responses:
        "500":
          description: internal server error
        "401":
          description: unauthorized
        "400":
          description: bad request
        "204":
          description: post successfully unbookmarked
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserInput:
      type: object
      required:
        - email
        - username
        - password
      properties:
        email:
          type: string 
        username:
          type: string 
        firstName:
          type: string 
        lastName:
          type: string 
        displayName:
          type: string 
        password:
          type: string 
